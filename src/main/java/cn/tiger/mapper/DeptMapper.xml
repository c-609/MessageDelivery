<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tiger.mapper.DeptMapper">
	<resultMap type="cn.tiger.bean.Dept" id="DeptMap">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="parentId" property="parentId"/>
		<result column="status" property="status"/>
		<result column="createTime" property="createTime"/>
		<result column="updateTime" property="updateTime"/>
		<result column="operatorId" property="operatorId"/>
	</resultMap>
	
	<resultMap type="cn.tiger.bean.Student" id="StudentMap">
		<id column="userId" property="userId"/>
		<result column="name" property="name"/>
		<result column="sphone" property="phone"/>
		<result column="saddress" property="address"/>
		<result column="sgender" property="gender"/>
		<result column="sstatus" property="status"/>
		<result column="sage" property="age"/>
		<result column="screateTime" property="createTime"/>
		<result column="sdegreeId" property="degreeId"/>
		<collection property="roles"  ofType="cn.tiger.bean.Role">
			<id column="role_id" property="id"/>
			<result column="role_name" property="name"/>
<!-- 			<result column="role_alias" property="alias"/>
			<result column="role_status" property="status"/> -->
		</collection>
		<collection property="depts" ofType="cn.tiger.bean.Dept">
			<id column="dept_id" property="id"/>
			<result column="dept_name" property="name"/>
<!-- 			<result column="dept_status" property="status"/> -->
		</collection>
	</resultMap>
	
	<resultMap type="cn.tiger.bean.Teacher" id="TeacherMap">
		<id column="userId" property="userId"/>
		<result column="name" property="name"/>
		<result column="phone" property="phone"/>
		<result column="address" property="address"/>
		<result column="gender" property="gender"/>
		<result column="status" property="status"/>
		<result column="age" property="age"/>
		<result column="createTime" property="createTime"/>
		<result column="positionId" property="positionId"/>
		<collection property="roles"  ofType="cn.tiger.bean.Role">
			<id column="role_id" property="id"/>
			<result column="role_name" property="name"/>
<!-- 			<result column="role_status" property="status"/> -->
		</collection>
		<collection property="depts" ofType="cn.tiger.bean.Dept">
			<id column="dept_id" property="id"/>
			<result column="dept_name" property="name"/>
<!-- 			<result column="dept_status" property="status"/> -->
		</collection>
	</resultMap>
	
	<select id="findDeptList" resultMap="DeptMap">
		select * from dept
	</select>
	
	<insert id="addDept" parameterType="cn.tiger.bean.Dept">
		insert into dept(name,parentId,operatorId)
		value(#{name},#{parentId},#{operatorId})
	</insert>
	
	<update id="updateDept" parameterType="cn.tiger.bean.Dept">
		update dept
		<trim prefix="SET" suffixOverrides=",">
              <if test="name!=null ">
                  name = #{name,jdbcType=VARCHAR},
              </if>
              <if test="parentId!=null">
                  parentId = #{parentId},
              </if>
              <if test="status!=null">
                  status = #{status,jdbcType=INTEGER},
              </if>
              <if test="operatorId!=null">
                  operatorId = #{operatorId,jdbcType=INTEGER},
              </if>
          </trim> 
          	where dept.id = #{id}
	</update>
	
	<delete id="deleteDeptById">
		delete  from dept where id = #{dId}
	</delete>
	
	<insert id="addDeptForUsers">
		insert into dept_user(deptId,userId)
		values
		<foreach collection="deptIds" item="deptId" separator=",">
	            (#{deptId},#{userId})
	        </foreach>
	</insert>
	
	<delete id="deleteDeptUsersByUserid">
		delete from dept_user where userId=#{userId}
	</delete>
	
	<select id="findStudentByDeptid" resultMap="StudentMap">
		select students.*,
		roles.id as role_id,roles.name as role_name,dept.id as dept_id,dept.name as dept_name 
		from students,user_role,roles,dept,dept_user
		where students.userId = user_role.userId and
		user_role.roleId = roles.id and
		students.userId = dept_user.userId and
		dept_user.deptId = dept.id and
		dept.id = #{deptId}
	</select>
	
	<select id="findTeacherByDeptid" resultMap="TeacherMap">
		select teachers.*,
		roles.id as role_id,roles.name as role_name,dept.id as dept_id,dept.name as dept_name 
		from teachers,user_role,roles,dept,dept_user
		where teachers.userId = user_role.userId and
		user_role.roleId = roles.id and
		teachers.userId = dept_user.userId and
		dept_user.deptId = dept.id and
		dept.id = #{deptId}
	</select>
</mapper>