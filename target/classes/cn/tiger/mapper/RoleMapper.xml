<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tiger.mapper.RoleMapper">

	<resultMap type="cn.tiger.bean.Role" id="RoleMap">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="alias" property="alias"/>
		<result column="createTime" property="createTime"/>
		<result column="updateTime" property="updateTime"/>
		<result column="operatorId" property="operatorId"/>
		<result column="status" property="status"/>
	</resultMap>

	<resultMap type="cn.tiger.bean.User" id="UserMap">
		<id column="id"  property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="status" property="status"/>
		<collection property="roles"  ofType="cn.tiger.bean.Role">
			<id column="role_id" property="id"/>
			<result column="role_name" property="name"/>
			<result column="role_alias" property="alias"/>
			<result column="role_status" property="status"/>
		</collection>
		<collection property="depts" ofType="cn.tiger.bean.Dept">
			<id column="dept_id" property="id"/>
			<result column="dept_name" property="name"/>
			<result column="dept_status" property="status"/>
		</collection>
	</resultMap>
	<select id="findAllRole" resultMap="RoleMap">
		select * from roles
	</select>
	
	<insert id="addRole"  parameterType="cn.tiger.bean.Role">
		insert into roles(name,alias,operatorId)
		value(#{name},#{alias},#{operatorId})
	</insert>
	
	<update id="updateRole">
		update roles
		<trim prefix="SET" suffixOverrides=",">
              <if test="name!=null ">
                  name = #{name,jdbcType=VARCHAR},
              </if>
              <if test="alias!=null">
                  alias = #{alias},
              </if>
              <if test="operatorId!=null">
                  operatorId = #{operatorId,jdbcType=INTEGER},
              </if>
          </trim> 
          	where roles.id = #{id}
	</update>

	<delete id="deleteRoleById">
		delete from roles where id = #{rId}
	</delete>
	
	<select id="findUserByRoleId" resultMap="UserMap">
		SELECT users.*,roles.id as role_id,roles.name as role_name,roles.alias as role_alias,roles.status as role_status,dept.id as dept_id,
		 dept.name as dept_name,dept.status as dept_status 
		 FROM users,roles,dept,user_role,dept_user
		where
			users.id = user_role.userId and
			roles.id = user_role.roleId and
			users.id = dept_user.userId and
			dept.id = dept_user.deptId and 
			roles.id = #{rId}
	</select>
</mapper>