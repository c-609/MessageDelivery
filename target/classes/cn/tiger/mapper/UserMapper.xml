<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tiger.mapper.UserMapper">
	
	<resultMap type="cn.tiger.bean.User" id="UserMap">
		<id column="id"  property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="status" property="status"/>
		<collection property="roles"  ofType="cn.tiger.bean.Role">
			<id column="role_id" property="id"/>
			<result column="role_name" property="name"/>
			<result column="role_alias" property="alias"/>
			<result column="role_status" property="status"/>
		</collection>
		<collection property="depts" ofType="cn.tiger.bean.Dept">
			<id column="dept_id" property="id"/>
			<result column="dept_name" property="name"/>
			<result column="dept_status" property="status"/>
		</collection>
		<collection property="groups" ofType="cn.tiger.bean.Groups">
			<id column="groups_id" property="id"/>
			<result column="groups_name" property="name"/>
		</collection>
	</resultMap>
	
	<select id="loginAuthenticationByUsername"  resultType="cn.tiger.bean.User">
		select *from users where username = #{uName}
	</select>
		
	<select id="findAllUser" resultMap="UserMap">
		select *from users
	</select>
	
	<select id="findUserByUserid" resultMap="UserMap">
		SELECT users.*,roles.id as role_id,roles.name as role_name,roles.alias as role_alias,roles.status as role_status,dept.id as dept_id,
		 dept.name as dept_name,dept.status as dept_status,groups.id as groups_id,groups.name as groups_name
		 FROM users,roles,dept,user_role,dept_user,user_groups,groups
		where
			users.id = user_role.userId and
			roles.id = user_role.roleId and
			users.id = dept_user.userId and
			dept.id = dept_user.deptId and 
			users.id = user_groups.userId and
			user_groups.groupId = groups.id and
			users.id = #{uId}
	</select>
	
	
	<select id="findUserByUsername" resultMap="UserMap">
		SELECT users.*,roles.id as role_id,roles.name as role_name,roles.alias as role_alias,roles.status as role_status,dept.id as dept_id,
		 dept.name as dept_name,dept.status as dept_status,groups.id as groups_id,groups.name as groups_name
		 FROM users,roles,dept,user_role,dept_user,user_groups,groups
		where
			users.id = user_role.userId and
			roles.id = user_role.roleId and
			users.id = dept_user.userId and
			dept.id = dept_user.deptId and 
			users.id = user_groups.userId and
			user_groups.groupId = groups.id and
			users.username =#{uName}
	</select>
	
	
	<insert id="groupUsers">
		insert into user_groups(userId,groupId)
		value(#{userId},#{groupId})
	</insert>
	
	<update id="updateUser" parameterType="cn.tiger.bean.User">
			update users 
			<trim prefix="SET" suffixOverrides=",">
              <if test="username!=null ">
                  username = #{username,jdbcType=VARCHAR},
              </if>
              <if test="password!=null">
                  password = #{password},
              </if>
              <if test="status!=null">
                  status = #{status,jdbcType=INTEGER},
              </if>
          </trim> 
          	where users.id = #{id}
	</update>
	
	<delete id="deleteUserById">
		delete  from users where users.id = #{uId}
	</delete>
	
	<insert id="addUser" parameterType="cn.tiger.bean.User">
		insert into users(username,password)
		value(#{user.username},#{user.password})
	</insert>

</mapper>